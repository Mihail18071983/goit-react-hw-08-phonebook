{"version":3,"file":"static/js/544.0acd9074.chunk.js","mappings":"6QAWMA,EAAmBC,EAAAA,GAAW,CAClCC,KAAMD,EAAAA,KAEHE,IAAI,EAAG,qDACPC,SAAS,wBACZC,MAAOJ,EAAAA,GACG,oBACPI,MAAM,uBACND,SAAS,qBACZE,SAAUL,EAAAA,GACA,uBACPE,IAAI,EAAG,qDACPC,SAAS,0BAmFd,EAhFyB,WACvB,IAAMG,GAAWC,EAAAA,EAAAA,MACXC,GAASC,EAAAA,EAAAA,IAAU,CACvBC,cAAe,CACbT,KAAM,GACNG,MAAO,GACPC,SAAU,IAEZN,iBAAkBA,EAClBY,SAAU,SAACC,EAAD,GAA4B,IAAjBC,EAAgB,EAAhBA,UACnBP,GAASQ,EAAAA,EAAAA,IAASF,IAClBC,GACD,IAGH,OACE,SAACE,EAAA,EAAD,CACEC,OAAQ,EACRC,WAAW,OACXC,YAAY,OACZC,UACE,qEAEFC,gBAAgB,QACfC,aAAa,MARhB,UAUE,UAAC,KAAD,CAAMV,SAAUH,EAAOc,aAAvB,WACE,SAACC,EAAA,EAAD,CACEC,WAAS,EACTC,GAAG,OACHxB,KAAK,OACLyB,MAAM,OACNvB,UAAQ,EACRwB,MAAOnB,EAAOI,OAAOX,KACrB2B,SAAUpB,EAAOqB,aACjBC,MAAOtB,EAAOuB,QAAQ9B,MAAQ+B,QAAQxB,EAAOyB,OAAOhC,MACpDiC,WAAY1B,EAAOuB,QAAQ9B,MAAQO,EAAOyB,OAAOhC,QAEnD,SAACsB,EAAA,EAAD,CACEC,WAAS,EACTC,GAAG,QACHxB,KAAK,QACLyB,MAAM,QACNvB,UAAQ,EACRwB,MAAOnB,EAAOI,OAAOR,MACrBwB,SAAUpB,EAAOqB,aACjBC,MAAOtB,EAAOuB,QAAQ3B,OAAS4B,QAAQxB,EAAOyB,OAAO7B,OACrD8B,WAAY1B,EAAOuB,QAAQ3B,OAASI,EAAOyB,OAAO7B,SAEpD,SAACmB,EAAA,EAAD,CACEC,WAAS,EACTC,GAAG,WACHxB,KAAK,WACLyB,MAAM,WACNS,KAAK,WACLR,MAAOnB,EAAOI,OAAOP,SACrBuB,SAAUpB,EAAOqB,aACjBC,MAAOtB,EAAOuB,QAAQ1B,UAAY2B,QAAQxB,EAAOyB,OAAO5B,UACxD6B,WAAY1B,EAAOuB,QAAQ1B,UAAYG,EAAOyB,OAAO5B,YAEvD,SAAC+B,EAAA,EAAD,CACEC,MAAM,UACNC,QAAQ,YACRd,WAAS,EACTW,KAAK,SACLI,MAAO,CACLC,QAAS,OACTnB,aAAc,GACdoB,MAAO,IACPxB,WAAY,OACZC,YAAa,QAVjB,yBAkBP,E,oBCjFD,EAZiB,WAEf,OADqBwB,EAAAA,EAAAA,KAAfC,YAEI,SAAC,KAAD,CAAUC,GAAG,eAGrB,UAAC,IAAD,YACE,SAAC,KAAD,iCACA,SAAC,EAAD,MAGL,C,8IClBYC,EAAWC,EAAAA,GAAAA,GAAH,kEAKRC,EAAOD,EAAAA,GAAAA,KAAH,iMAWJE,GAAYF,EAAAA,EAAAA,IAAO/B,EAAAA,EAAP+B,CAAH,sH","sources":["modules/RegisterForm/RegisterForm.jsx","Pages/RegisterPage.jsx","shared/components/Page.styled.js"],"sourcesContent":["import React from 'react';\nimport { useFormik } from 'formik';\nimport * as yup from 'yup';\nimport Button from '@mui/material/Button';\nimport Box from '@mui/material/Box';\nimport TextField from '@mui/material/TextField';\nimport { useDispatch } from 'react-redux';\nimport { register } from 'redux/auth/auth-operations';\n\nimport { Form } from 'shared/components/Page.styled';\n\nconst validationSchema = yup.object({\n  name: yup\n    .string()\n    .min(6, 'Nickname should be of minimum 6 characters length')\n    .required('nickname is required'),\n  email: yup\n    .string('Enter your email')\n    .email('Enter a valid email')\n    .required('Email is required'),\n  password: yup\n    .string('Enter your password')\n    .min(6, 'Password should be of minimum 6 characters length')\n    .required('Password is required'),\n});\n\nconst RegistrationForm = () => {\n  const dispatch = useDispatch();\n  const formik = useFormik({\n    initialValues: {\n      name: '',\n      email: '',\n      password: '',\n    },\n    validationSchema: validationSchema,\n    onSubmit: (values, { resetForm }) => {\n      dispatch(register(values));\n      resetForm();\n    },\n  });\n\n  return (\n    <Box\n      margin={1}\n      marginLeft=\"auto\"\n      marginRight=\"auto\"\n      boxShadow={\n        ' rgba(0, 0, 0, 0.16) 0px 3px 6px, rgba(0, 0, 0, 0.23) 0px 3px 6px;'\n      }\n      backgroundColor='#ffff'\n       borderRadius='5px'\n    >\n      <Form onSubmit={formik.handleSubmit}>\n        <TextField\n          fullWidth\n          id=\"name\"\n          name=\"name\"\n          label=\"name\"\n          required\n          value={formik.values.name}\n          onChange={formik.handleChange}\n          error={formik.touched.name && Boolean(formik.errors.name)}\n          helperText={formik.touched.name && formik.errors.name}\n        />\n        <TextField\n          fullWidth\n          id=\"email\"\n          name=\"email\"\n          label=\"Email\"\n          required\n          value={formik.values.email}\n          onChange={formik.handleChange}\n          error={formik.touched.email && Boolean(formik.errors.email)}\n          helperText={formik.touched.email && formik.errors.email}\n        />\n        <TextField\n          fullWidth\n          id=\"password\"\n          name=\"password\"\n          label=\"Password\"\n          type=\"password\"\n          value={formik.values.password}\n          onChange={formik.handleChange}\n          error={formik.touched.password && Boolean(formik.errors.password)}\n          helperText={formik.touched.password && formik.errors.password}\n        />\n        <Button\n          color=\"primary\"\n          variant=\"contained\"\n          fullWidth\n          type=\"submit\"\n          style={{\n            display: 'flex',\n            borderRadius: 10,\n            width: 100,\n            marginLeft: 'auto',\n            marginRight: 'auto',\n          }}\n        >\n          Sign up\n        </Button>\n      </Form>\n    </Box>\n  );\n};\n\nexport default RegistrationForm;\n","import React from 'react';\nimport RegistrationForm from 'modules/RegisterForm/RegisterForm';\n\nimport { Navigate } from 'react-router-dom';\n\nimport { FormHead } from 'shared/components/Page.styled';\nimport { StyledBox } from 'shared/components/Page.styled';\n\nimport { useAuth } from 'shared/hooks/useAuth';\n\n\nconst Register = () => {\nconst { isLoggedIn } = useAuth();\n  if (isLoggedIn) {\n    return (<Navigate to=\"/contacts\"/>)\n  }\n  return (\n    <StyledBox>\n      <FormHead>USER REGISTRATION</FormHead>\n      <RegistrationForm />\n    </StyledBox>\n  );\n};\nexport default Register;\n","import styled from 'styled-components';\n\nimport { Box } from '@mui/material';\n\nexport const FormHead = styled.h1`\n  text-align: center;\n  color: #6495ed;\n`;\n\nexport const Form = styled.form`\n  margin: 0;\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  justify-content: center;\n  gap: 10px;\n  padding: 10px 20px;\n  max-width: 400px;\n`;\n\nexport const StyledBox = styled(Box)`\n  position: absolute;\n  top: 30%;\n  left: 50%;\n  translate: -50%;\n  padding-bottom: 50px;\n`;\n"],"names":["validationSchema","yup","name","min","required","email","password","dispatch","useDispatch","formik","useFormik","initialValues","onSubmit","values","resetForm","register","Box","margin","marginLeft","marginRight","boxShadow","backgroundColor","borderRadius","handleSubmit","TextField","fullWidth","id","label","value","onChange","handleChange","error","touched","Boolean","errors","helperText","type","Button","color","variant","style","display","width","useAuth","isLoggedIn","to","FormHead","styled","Form","StyledBox"],"sourceRoot":""}