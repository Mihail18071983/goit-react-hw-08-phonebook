{"version":3,"file":"static/js/303.9c8ab3b7.chunk.js","mappings":"+RAYMA,EAAmBC,EAAAA,GAAW,CAClCC,MAAOD,EAAAA,GACG,oBACPC,MAAM,uBACNC,SAAS,qBACZC,SAAUH,EAAAA,GACA,uBACPI,IAAI,EAAG,qDACPF,SAAS,0BAoEd,EAjEkB,WAChB,IAAMG,GAAWC,EAAAA,EAAAA,MACXC,GAASC,EAAAA,EAAAA,IAAU,CACvBC,cAAe,CACbR,MAAO,GACPE,SAAU,IAEZJ,iBAAkBA,EAClBW,SAAU,SAACC,EAAD,GAA4B,IAAjBC,EAAgB,EAAhBA,UACnBP,GAASQ,EAAAA,EAAAA,IAAMF,IACfC,GACD,IAGH,OACE,SAACE,EAAA,EAAD,CACEC,OAAQ,EACRC,WAAW,OACXC,YAAY,OACZC,UAAW,qEACXC,gBAAgB,QAChBC,aAAa,MANf,UAQE,UAAC,KAAD,CAAMV,SAAUH,EAAOc,aAAvB,WACE,SAACC,EAAA,EAAD,CACEC,WAAS,EACTC,GAAG,QACHC,KAAK,QACLC,MAAM,QACNC,MAAOpB,EAAOI,OAAOV,MACrB2B,SAAUrB,EAAOsB,aACjBC,MAAOvB,EAAOwB,QAAQ9B,OAAS+B,QAAQzB,EAAO0B,OAAOhC,OACrDiC,WAAY3B,EAAOwB,QAAQ9B,OAASM,EAAO0B,OAAOhC,SAEpD,SAACqB,EAAA,EAAD,CACEC,WAAS,EACTC,GAAG,WACHC,KAAK,WACLC,MAAM,WACNS,KAAK,WACLR,MAAOpB,EAAOI,OAAOR,SACrByB,SAAUrB,EAAOsB,aACjBC,MAAOvB,EAAOwB,QAAQ5B,UAAY6B,QAAQzB,EAAO0B,OAAO9B,UACxD+B,WAAY3B,EAAOwB,QAAQ5B,UAAYI,EAAO0B,OAAO9B,YAEvD,SAACiC,EAAA,EAAD,CACEC,MAAM,UACNC,QAAQ,YACRf,WAAS,EACTY,KAAK,SACLI,MAAO,CACLC,QAAS,OACTpB,aAAc,GACdqB,MAAO,IACPzB,WAAY,OACZC,YAAa,QAVjB,wBAkBP,E,oBC/DD,EAbkB,WAEhB,OADqByB,EAAAA,EAAAA,KAAfC,YAEG,SAAC,KAAD,CAAUC,GAAG,eAGpB,UAAC,IAAD,YACE,SAAC,KAAD,0BACA,SAAC,EAAD,MAGL,C,8ICjBYC,EAAWC,EAAAA,GAAAA,GAAH,kEAKRC,EAAOD,EAAAA,GAAAA,KAAH,2HAQJE,GAAYF,EAAAA,EAAAA,IAAOhC,EAAAA,EAAPgC,CAAH,qH","sources":["modules/LoginForm/LoginForm.jsx","Pages/LoginPage.jsx","shared/components/Page.styled.js"],"sourcesContent":["import React from 'react';\nimport { useFormik } from 'formik';\nimport * as yup from 'yup';\nimport Button from '@mui/material/Button';\nimport Box from '@mui/material/Box';\nimport TextField from '@mui/material/TextField';\n\nimport { logIn } from 'redux/auth/auth-operations';\nimport { useDispatch } from 'react-redux';\n\nimport { Form } from 'shared/components/Page.styled';\n\nconst validationSchema = yup.object({\n  email: yup\n    .string('Enter your email')\n    .email('Enter a valid email')\n    .required('Email is required'),\n  password: yup\n    .string('Enter your password')\n    .min(6, 'Password should be of minimum 6 characters length')\n    .required('Password is required'),\n});\n\nconst LoginForm = () => {\n  const dispatch = useDispatch();\n  const formik = useFormik({\n    initialValues: {\n      email: '',\n      password: '',\n    },\n    validationSchema: validationSchema,\n    onSubmit: (values, { resetForm }) => {\n      dispatch(logIn(values));\n      resetForm();\n    },\n  });\n\n  return (\n    <Box\n      margin={1}\n      marginLeft=\"auto\"\n      marginRight=\"auto\"\n      boxShadow={' rgba(0, 0, 0, 0.16) 0px 3px 6px, rgba(0, 0, 0, 0.23) 0px 3px 6px;'}\n      backgroundColor='#ffff'\n      borderRadius='5px'\n    >\n      <Form onSubmit={formik.handleSubmit}>\n        <TextField\n          fullWidth\n          id=\"email\"\n          name=\"email\"\n          label=\"Email\"\n          value={formik.values.email}\n          onChange={formik.handleChange}\n          error={formik.touched.email && Boolean(formik.errors.email)}\n          helperText={formik.touched.email && formik.errors.email}\n        />\n        <TextField\n          fullWidth\n          id=\"password\"\n          name=\"password\"\n          label=\"Password\"\n          type=\"password\"\n          value={formik.values.password}\n          onChange={formik.handleChange}\n          error={formik.touched.password && Boolean(formik.errors.password)}\n          helperText={formik.touched.password && formik.errors.password}\n        />\n        <Button\n          color=\"primary\"\n          variant=\"contained\"\n          fullWidth\n          type=\"submit\"\n          style={{\n            display: 'flex',\n            borderRadius: 10,\n            width: 100,\n            marginLeft: 'auto',\n            marginRight: 'auto',\n          }}\n        >\n          Log in\n        </Button>\n      </Form>\n    </Box>\n  );\n};\n\nexport default LoginForm;\n","import LoginForm from 'modules/LoginForm/LoginForm';\n\nimport { StyledBox } from 'shared/components/Page.styled';\nimport { FormHead } from 'shared/components/Page.styled';\n\nimport { Navigate } from 'react-router-dom';\n\nimport { useAuth } from 'shared/hooks/useAuth';\n\n\nconst LoginPage = () => {\nconst { isLoggedIn } = useAuth();\n  if (isLoggedIn) {\n    return <Navigate to=\"/contacts\" />;\n  }\n  return (\n    <StyledBox>\n      <FormHead>LOGIN FORM</FormHead>\n      <LoginForm />\n    </StyledBox>\n  );\n};\n\nexport default LoginPage;\n\n\n","import styled from 'styled-components';\n\nimport { Box } from '@mui/material';\n\nexport const FormHead = styled.h1`\n  text-align: center;\n  color: #6495ed;\n`;\n\nexport const Form = styled.form`\n  display: flex;\n  flex-direction: column;\n  gap: 10px;\n  padding: 10px 16px;\n  width: 400px;\n`;\n\nexport const StyledBox = styled(Box)`\n  position: absolute;\n  top: 30%;\n  left: 50%;\n  translate: -50%;\n  padding-bottom:50px;\n`;\n"],"names":["validationSchema","yup","email","required","password","min","dispatch","useDispatch","formik","useFormik","initialValues","onSubmit","values","resetForm","logIn","Box","margin","marginLeft","marginRight","boxShadow","backgroundColor","borderRadius","handleSubmit","TextField","fullWidth","id","name","label","value","onChange","handleChange","error","touched","Boolean","errors","helperText","type","Button","color","variant","style","display","width","useAuth","isLoggedIn","to","FormHead","styled","Form","StyledBox"],"sourceRoot":""}