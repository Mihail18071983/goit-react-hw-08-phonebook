{"version":3,"file":"static/js/544.44384018.chunk.js","mappings":"qRASMA,EAAmBC,EAAAA,GAAW,CAClCC,KAAMD,EAAAA,KAEHE,IAAI,EAAG,qDACPC,SAAS,wBACZC,MAAOJ,EAAAA,GACG,oBACPI,MAAM,uBACND,SAAS,qBACZE,SAAUL,EAAAA,GACA,uBACPE,IAAI,EAAG,qDACPC,SAAS,0BAsEd,EAnEyB,WACvB,IAAMG,GAAWC,EAAAA,EAAAA,MACXC,GAASC,EAAAA,EAAAA,IAAU,CACvBC,cAAe,CACbT,KAAM,GACNG,MAAO,GACPC,SAAU,IAEZN,iBAAkBA,EAClBY,SAAU,SAACC,EAAD,GAA4B,IAAjBC,EAAgB,EAAhBA,UAEnBP,GAASQ,EAAAA,EAAAA,IAASF,IAClBC,GACD,IAGH,OACE,SAACE,EAAA,EAAD,CAAKC,OAAQ,EAAb,UACE,kBAAML,SAAUH,EAAOS,aAAvB,WACE,SAACC,EAAA,EAAD,CACEC,WAAS,EACTC,GAAG,OACHnB,KAAK,OACLoB,MAAM,OACNC,MAAOd,EAAOI,OAAOX,KACrBsB,SAAUf,EAAOgB,aACjBC,MAAOjB,EAAOkB,QAAQzB,MAAQ0B,QAAQnB,EAAOoB,OAAO3B,MACpD4B,WAAYrB,EAAOkB,QAAQzB,MAAQO,EAAOoB,OAAO3B,KACjDe,OAAO,UAET,SAACE,EAAA,EAAD,CACEC,WAAS,EACTC,GAAG,QACHnB,KAAK,QACLoB,MAAM,QACNC,MAAOd,EAAOI,OAAOR,MACrBmB,SAAUf,EAAOgB,aACjBC,MAAOjB,EAAOkB,QAAQtB,OAASuB,QAAQnB,EAAOoB,OAAOxB,OACrDyB,WAAYrB,EAAOkB,QAAQtB,OAASI,EAAOoB,OAAOxB,MAClDY,OAAO,WAET,SAACE,EAAA,EAAD,CACEC,WAAS,EACTC,GAAG,WACHnB,KAAK,WACLoB,MAAM,WACNS,KAAK,WACLR,MAAOd,EAAOI,OAAOP,SACrBkB,SAAUf,EAAOgB,aACjBC,MAAOjB,EAAOkB,QAAQrB,UAAYsB,QAAQnB,EAAOoB,OAAOvB,UACxDwB,WAAYrB,EAAOkB,QAAQrB,UAAYG,EAAOoB,OAAOvB,SACrDW,OAAO,UAET,SAACe,EAAA,EAAD,CACEC,MAAM,UACNC,QAAQ,YACRd,WAAS,EACTW,KAAK,SACLI,MAAO,CAAEC,UAAW,IALtB,wBAYP,E,oBCrED,EAZiB,WAEf,OADmBC,EAAAA,EAAAA,IAAYC,EAAAA,KAErB,SAAC,KAAD,CAAUC,GAAG,eAGrB,iCACE,2CACA,SAAC,EAAD,MAGL,C","sources":["modules/RegisterForm/RegisterForm.jsx","Pages/RegisterPage.jsx"],"sourcesContent":["import React from 'react';\nimport { useFormik } from 'formik';\nimport * as yup from 'yup';\nimport Button from '@mui/material/Button';\nimport Box from '@mui/material/Box';\nimport TextField from '@mui/material/TextField';\nimport { useDispatch } from 'react-redux';\nimport { register } from 'redux/auth/auth-operations';\n\nconst validationSchema = yup.object({\n  name: yup\n    .string()\n    .min(6, 'Password should be of minimum 6 characters length')\n    .required('nickname is required'),\n  email: yup\n    .string('Enter your email')\n    .email('Enter a valid email')\n    .required('Email is required'),\n  password: yup\n    .string('Enter your password')\n    .min(6, 'Password should be of minimum 6 characters length')\n    .required('Password is required'),\n});\n\nconst RegistrationForm = () => {\n  const dispatch = useDispatch();\n  const formik = useFormik({\n    initialValues: {\n      name: '',\n      email: '',\n      password: '',\n    },\n    validationSchema: validationSchema,\n    onSubmit: (values, { resetForm }) => {\n      // alert(JSON.stringify(values, null, 2));\n      dispatch(register(values))\n      resetForm();\n    },\n  });\n\n  return (\n    <Box margin={1}>\n      <form onSubmit={formik.handleSubmit}>\n        <TextField\n          fullWidth\n          id=\"name\"\n          name=\"name\"\n          label=\"name\"\n          value={formik.values.name}\n          onChange={formik.handleChange}\n          error={formik.touched.name && Boolean(formik.errors.name)}\n          helperText={formik.touched.name && formik.errors.name}\n          margin=\"none\"\n        />\n        <TextField\n          fullWidth\n          id=\"email\"\n          name=\"email\"\n          label=\"Email\"\n          value={formik.values.email}\n          onChange={formik.handleChange}\n          error={formik.touched.email && Boolean(formik.errors.email)}\n          helperText={formik.touched.email && formik.errors.email}\n          margin=\"dense\"\n        />\n        <TextField\n          fullWidth\n          id=\"password\"\n          name=\"password\"\n          label=\"Password\"\n          type=\"password\"\n          value={formik.values.password}\n          onChange={formik.handleChange}\n          error={formik.touched.password && Boolean(formik.errors.password)}\n          helperText={formik.touched.password && formik.errors.password}\n          margin=\"none\"\n        />\n        <Button\n          color=\"primary\"\n          variant=\"contained\"\n          fullWidth\n          type=\"submit\"\n          style={{ marginTop: 10 }}\n        >\n          Submit\n        </Button>\n      </form>\n    </Box>\n  );\n};\n\nexport default RegistrationForm;\n","import React from 'react';\nimport RegistrationForm from 'modules/RegisterForm/RegisterForm';\n\nimport { selectIsLoggedIn } from 'redux/auth/auth-selectors';  \nimport { useSelector } from 'react-redux';\nimport { Navigate } from 'react-router-dom';\n\n\nconst Register = () => {\n  const isLoggedIn = useSelector(selectIsLoggedIn);\n  if (isLoggedIn) {\n    return (<Navigate to=\"/contacts\"/>)\n  }\n  return (\n    <>\n      <h1>Register Page</h1>\n      <RegistrationForm />\n    </>\n  );\n};\nexport default Register;\n"],"names":["validationSchema","yup","name","min","required","email","password","dispatch","useDispatch","formik","useFormik","initialValues","onSubmit","values","resetForm","register","Box","margin","handleSubmit","TextField","fullWidth","id","label","value","onChange","handleChange","error","touched","Boolean","errors","helperText","type","Button","color","variant","style","marginTop","useSelector","selectIsLoggedIn","to"],"sourceRoot":""}