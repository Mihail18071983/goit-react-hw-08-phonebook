{"version":3,"file":"static/js/728.82c8a827.chunk.js","mappings":"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","sources":["modules/ContactForm/initialState.js","redux/contacts/contacts-selectors.js","modules/ContactForm/ContactForm.jsx","modules/Filter/Filter.jsx","shared/components/Button/Button.styled.jsx","modules/Contact/Contact.styled.jsx","modules/Contact/Contact.jsx","modules/ContactList/ContactList.styled.jsx","modules/ContactList/ContactList.jsx","modules/Contact/Ð¡ontactsContainer.styled.jsx","redux/filter/filter-selectors.js","Pages/ContactPage.jsx","shared/components/Page.styled.js"],"sourcesContent":["const inititalState = {\n     name: '', number: ''\n}\n\nexport default inititalState;","export const getAllContacts = store => store.contacts.items;\n\nexport const getFilteredContacts = ({ contacts, filter } ) => {\n    if (!filter) {\n      return contacts.items;\n    }\n    const normalizedFilter = filter.toLowerCase();\n    return contacts.items.filter(\n      ({ name, number }) =>\n        name.toLowerCase().includes(normalizedFilter) ||\n        number.includes(normalizedFilter)\n    );\n}\n\nexport const getIsLoading = state => state.contacts.isLoading;\n\nexport const getError = state => state.contacts.error;","import PropTypes from 'prop-types';\nimport inititalState from './initialState';\n\nimport { useFormik } from 'formik';\nimport * as yup from 'yup';\n\nimport { Form } from 'shared/components/Page.styled';\n\nimport Box from '@mui/material/Box';\n\nimport TextField from '@mui/material/TextField';\n\nimport { getIsLoading } from 'redux/contacts/contacts-selectors';\nimport { ColorRing } from 'react-loader-spinner';\nimport Button from '@mui/material/Button';\n\nimport { useSelector } from 'react-redux';\n\nconst phoneRegExp =\n  /^((\\\\+[1-9]{1,4}[ \\\\-]*)|(\\\\([0-9]{2,3}\\\\)[ \\\\-]*)|([0-9]{2,4})[ \\\\-]*)*?[0-9]{3,4}?[ \\\\-]*[0-9]{3,4}?$/;\n\nconst validationSchema = yup.object({\n  name: yup\n    .string()\n    .min(6, 'Name should be of minimum 6 characters length')\n    .required('nickname is required'),\n  number: yup.string().matches(phoneRegExp, 'Phone number is not valid'),\n});\n\nconst ContactForm = ({ onSubmit }) => {\n  const formik = useFormik({\n    initialValues: { ...inititalState },\n    validationSchema: validationSchema,\n    onSubmit: (values, { resetForm }) => {\n      const result = onSubmit(values);\n      if (result) {\n        resetForm();\n      }\n    },\n  });\n\n  const isLoading = useSelector(getIsLoading);\n\n  return (\n    <Box\n      margin={1}\n      marginBottom='30px'\n      marginLeft=\"auto\"\n      marginRight=\"auto\"\n      boxShadow={\n        ' rgba(0, 0, 0, 0.16) 0px 3px 6px, rgba(0, 0, 0, 0.23) 0px 3px 6px;'\n      }\n      backgroundColor=\"#ffff\"\n      borderRadius='5px'\n    >\n      <Form onSubmit={formik.handleSubmit}>\n        <TextField\n          fullWidth\n          id=\"name\"\n          name=\"name\"\n          label=\"name\"\n          required\n          value={formik.values.name}\n          onChange={formik.handleChange}\n          error={formik.touched.name && Boolean(formik.errors.name)}\n          helperText={formik.touched.name && formik.errors.name}\n        />\n\n        <TextField\n          fullWidth\n          id=\"number\"\n          name=\"number\"\n          label=\"phone\"\n          required\n          value={formik.values.number}\n          onChange={formik.handleChange}\n          error={formik.touched.number && Boolean(formik.errors.number)}\n          helperText={formik.touched.number && formik.errors.number}\n        />\n\n        <div\n          style={{\n            display: 'flex',\n            alignItems: 'center',\n            justifyContent: 'center',\n            maxHeight: 30,\n            maxWidth: 150,\n            marginLeft: 'auto',\n            marginRight: 'auto',\n          }}\n        >\n          {!isLoading && (\n            <Button\n              color=\"primary\"\n              variant=\"contained\"\n              fullWidth\n              type=\"submit\"\n              style={{\n                display: 'flex',\n                borderRadius: 10,\n                marginLeft: 'auto',\n                marginRight: 'auto',\n              }}\n            >\n              Add contact\n            </Button>\n          )}\n          {isLoading && (\n            <ColorRing\n              visible={true}\n              height=\"40\"\n              width=\"40\"\n              ariaLabel=\"blocks-loading\"\n              wrapperStyle={{}}\n              wrapperClass=\"blocks-wrapper\"\n              colors={['#e15b64', '#f47e60', '#f8b26a', '#abbd81', '#849b87']}\n            />\n          )}\n        </div>\n      </Form>\n    </Box>\n  );\n};\n\nexport default ContactForm;\n\nContactForm.propTypes = {\n  onSubmit: PropTypes.func.isRequired,\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport OutlinedInput from '@mui/material/OutlinedInput';\nimport InputLabel from '@mui/material/InputLabel';\nimport Box from '@mui/material/Box';\n\nconst Filter = ({ value, onChange }) => (\n  <Box\n    margin={1}\n    marginLeft=\"auto\"\n    marginRight=\"auto\"\n    boxShadow={\n      ' rgba(0, 0, 0, 0.16) 0px 3px 6px, rgba(0, 0, 0, 0.23) 0px 3px 6px;'\n    }\n    backgroundColor=\"#ffff\"\n    borderRadius=\"5px\"\n  >\n    <InputLabel\n      sx={{\n        display: 'flex',\n        flexDirection: 'column',\n        gap: '10px',\n        marginBottom: '30px',\n        padding: '10px 16px',\n      }}\n    >\n      Find contacts by name\n      <OutlinedInput type=\"text\" value={value} onChange={onChange} />\n    </InputLabel>\n  </Box>\n);\n\nexport default Filter;\n\nFilter.propTypes = {\n  value: PropTypes.string.isRequired,\n  onChange: PropTypes.func.isRequired,\n};\n","import styled from 'styled-components';\n\nconst StyledBtn = styled.button`\n  border: none;;\n  outline: none;\n  cursor: pointer;\n  background-color: ${({ type }) =>\n    type === 'submit' ? '#0000ff' : 'transparent'};\n  border-radius: 5px;\n  padding: 5px 10px;\n  max-width: 100px;\n  transition: background-color 0.25s cubic-bezier(.05,.97,1,.08), color 0.25s cubic-bezier(.05,.97,1,.08);\n\n  &:hover {\n    background-color:${({ type }) =>\n  type === 'submit' ? '#ff0000' : '#0000ff'};\n    color:#ffffff;\n  }\n`;\n\nexport default StyledBtn;\n","import styled from 'styled-components';\n\nexport const StyledContact = styled.li`\n  margin: 0;\n  padding: 5px 10px;\n  border-radius: 5px;\n  &:not(:last-child) {\n    margin-bottom: 10px;\n  }\n  display: flex;\n  justify-content: space-between;\n  gap: 20px;\n  align-items: center;\n  box-shadow: rgba(0, 0, 0, 0.24) 0px 3px 8px;\n  background-color:#ffff;\n`;\n\nexport const ConctactName = styled.p`\n  margin-left: 20px;\n  font-size: 18px;\n`;\n\nexport const ContactNumber = styled.a`\ncolor: #000;\n  margin-left: auto;\n  font-size: 18px;\n  text-decoration: none;\n  transition: all 250ms ease-in-out;\n\n  :hover,\n  :focus {\n    color: #39b0ff;\n  }\n`;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { useDispatch } from 'react-redux';\nimport { useSelector } from 'react-redux';\nimport { deleteContact } from 'redux/contacts/contact-operations';\nimport { getIsLoading } from 'redux/contacts/contacts-selectors';\nimport { showSuccessMessage } from 'shared/utils/notifications';\nimport StyledBtn from '../../shared/components/Button/Button.styled';\nimport { StyledContact } from './Contact.styled';\nimport { ConctactName } from './Contact.styled';\nimport { ContactNumber } from './Contact.styled';\n\nimport { IconContext } from 'react-icons';\n\nimport { FaTrashAlt, FaSpinner } from 'react-icons/fa';\n\nimport { ColorRing } from 'react-loader-spinner';\n\nconst Contact = ({ name, number, id }) => {\n  const isLoading = useSelector(getIsLoading);\n  const dispatch = useDispatch();\n  const handleDelete = () => {\n    dispatch(deleteContact(id));\n    showSuccessMessage(\n      `${name} has been successfully deleted from your phone book!`\n    );\n  };\n  return (\n    <StyledContact>\n      <ConctactName>{name}</ConctactName>\n      <ContactNumber href={`tel:${number}`}>{number}</ContactNumber>\n\n      {!isLoading && (\n        <StyledBtn type=\"button\" onClick={handleDelete}>\n          <IconContext.Provider value={{ size: '2em' }}>\n            {isLoading ? <FaSpinner /> : <FaTrashAlt />}\n          </IconContext.Provider>\n        </StyledBtn>\n      )}\n      {isLoading && (\n        <ColorRing\n          visible={true}\n          height=\"40\"\n          width=\"40\"\n          ariaLabel=\"blocks-loading\"\n          wrapperStyle={{}}\n          wrapperClass=\"blocks-wrapper\"\n          colors={['#e15b64', '#f47e60', '#f8b26a', '#abbd81', '#849b87']}\n        />\n      )}\n    </StyledContact>\n  );\n};\n\nexport default Contact;\n\nContact.defaultProps = {\n  id: '01',\n};\n\nContact.propTypes = {\n  name: PropTypes.string,\n  number: PropTypes.string.isRequired,\n  id: PropTypes.string.isRequired,\n};\n","import styled from 'styled-components';\n\nconst ContactListStyled = styled.ul`\n  margin: 0;\n  padding: 10px 16px;\n  list-style: none;\n  border-radius: 5px;\n  background-color: #ffff;\n  box-shadow: rgba(6, 24, 44, 0.4) 0px 0px 0px 2px,\n    rgba(6, 24, 44, 0.65) 0px 4px 6px -1px,\n    rgba(255, 255, 255, 0.08) 0px 1px 0px inset;\n`;\n\nexport default ContactListStyled;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport Contact from '../Contact/Contact';\nimport ContactListStyled from './ContactList.styled';\n\nimport { getFilteredContacts } from 'redux/contacts/contacts-selectors';\n\nimport { useSelector } from 'react-redux';\n\nconst ContactList = () => {\n  const visibleContacts = useSelector(getFilteredContacts);\n  return (\n    <ContactListStyled>\n      {visibleContacts.map(({ id, name, number }) => {\n        return <Contact name={name} key={id} number={number} id={id} />;\n      })}\n    </ContactListStyled>\n  );\n};\n\nexport default ContactList;\n\nContactList.defaultProps = {\n  visibleContacts: [],\n};\n\nContactList.propTypes = {\n  visibleContacts: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.string.isRequired,\n      name: PropTypes.string.isRequired,\n      number: PropTypes.string.isRequired,\n    })\n  ),\n};\n","import styled from 'styled-components';\n\nconst ContactContainer = styled.div`\n  margin-left: auto;\n  margin-right:auto;\n`;\n\nexport default ContactContainer;","export const getFilter = store => store.filter;","\nimport { useSelector } from 'react-redux';\nimport { useDispatch } from 'react-redux';\nimport { useEffect } from 'react';\n\nimport { showInfoMessage, showSuccessMessage } from 'shared/utils/notifications';\n\nimport ContactForm from 'modules/ContactForm/ContactForm';\nimport Filter from 'modules/Filter/Filter';\nimport ContactList from 'modules/ContactList/ContactList'\nimport ContactContainer from 'modules/Contact/Ð¡ontactsContainer.styled';\n\nimport { StyledBox } from 'shared/components/Page.styled';\nimport { FormHead } from 'shared/components/Page.styled';\n\nimport { addContact, fetchContacts } from 'redux/contacts/contact-operations';\nimport { setFilter } from 'redux/filter/filter-slice';\nimport { getFilteredContacts } from 'redux/contacts/contacts-selectors';\nimport { getError } from 'redux/contacts/contacts-selectors';\nimport { getFilter } from 'redux/filter/filter-selectors';\n\n\n\nfunction ContactPage() {\n  const filteredContacts = useSelector(getFilteredContacts);\n  const filter = useSelector(getFilter);\n  const dispatch = useDispatch();\n\n  const isError = useSelector(getError);\n\n  useEffect(() => {\n    dispatch(fetchContacts());\n  }, [dispatch]);\n\n  const isNameExist = contName => {\n    const normalizedName = contName.toLowerCase();\n    const result = filteredContacts.find(({ name }) => {\n      return name.toLowerCase() === normalizedName;\n    });\n    return Boolean(result);\n  };\n\n  const handleAddContact = ({ name, number }) => {\n    if (isNameExist(name)) {\n      showInfoMessage(`${name} has already added in contacts`);\n      return false;\n    } else {\n      showSuccessMessage('Ð¡ontact has been added successfully');\n    }\n    const action = addContact({ name, number });\n    dispatch(action);\n    return true;\n  };\n\n  const changeFilter = e => {\n    dispatch(setFilter(e.currentTarget.value));\n  };\n\n  const isContact = Boolean(filteredContacts.length);\n\n  return (\n    <StyledBox>\n      <FormHead>ADDCONTACT FORM</FormHead>\n      <ContactForm onSubmit={handleAddContact} />\n      {!isError && (\n        <ContactContainer>\n          <FormHead>Contacts</FormHead>\n          <Filter value={filter} onChange={changeFilter} />\n          {isContact && <ContactList />}\n          {!isContact && <p>No contact in phonebook</p>}\n        </ContactContainer>\n      )}\n      {isError && (\n        <p style={{ fontSize: 24, fontWeight: 800 }}>\n          Ops, Something goes wrong{' '}\n        </p>\n      )}\n    </StyledBox>\n  );\n}\n\nexport default ContactPage;\n","import styled from 'styled-components';\n\nimport { Box } from '@mui/material';\n\nexport const FormHead = styled.h1`\n  text-align: center;\n  color: #6495ed;\n`;\n\nexport const Form = styled.form`\n  display: flex;\n  flex-direction: column;\n  gap: 10px;\n  padding: 10px 16px;\n  width: 400px;\n`;\n\nexport const StyledBox = styled(Box)`\n  position: absolute;\n  top: 15%;\n  left: 50%;\n  translate: -50%;\n  padding-bottom:50px;\n`;\n"],"names":["name","number","getFilteredContacts","contacts","filter","items","normalizedFilter","toLowerCase","includes","getIsLoading","state","isLoading","getError","error","validationSchema","yup","min","required","matches","onSubmit","formik","useFormik","initialValues","inititalState","values","resetForm","useSelector","Box","margin","marginBottom","marginLeft","marginRight","boxShadow","backgroundColor","borderRadius","handleSubmit","TextField","fullWidth","id","label","value","onChange","handleChange","touched","Boolean","errors","helperText","style","display","alignItems","justifyContent","maxHeight","maxWidth","Button","color","variant","type","visible","height","width","ariaLabel","wrapperStyle","wrapperClass","colors","InputLabel","sx","flexDirection","gap","padding","OutlinedInput","styled","StyledContact","ConctactName","ContactNumber","Contact","dispatch","useDispatch","href","onClick","deleteContact","showSuccessMessage","size","defaultProps","ContactList","visibleContacts","map","getFilter","store","filteredContacts","isError","useEffect","fetchContacts","isContact","length","contName","normalizedName","result","find","isNameExist","showInfoMessage","action","addContact","e","setFilter","currentTarget","fontSize","fontWeight","FormHead","Form","StyledBox"],"sourceRoot":""}