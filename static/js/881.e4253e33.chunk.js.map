{"version":3,"file":"static/js/881.e4253e33.chunk.js","mappings":"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","sources":["modules/ContactForm/initialState.js","shared/components/Button/Button.styled.jsx","modules/ContactForm/ContactForm.styled.jsx","modules/ContactForm/label.styled.jsx","redux/contacts/contacts-selectors.js","modules/ContactForm/ContactForm.jsx","modules/Filter/FilterLabel.styled.jsx","modules/Filter/Filter.jsx","modules/Contact/Contact.styled.jsx","modules/Contact/Contact.jsx","modules/ContactList/ContactList.styled.jsx","modules/ContactList/ContactList.jsx","modules/Contact/PhoneBookTitle.styled.jsx","modules/Contact/ContactTitle.styled.jsx","modules/Contact/СontactsContainer.styled.jsx","redux/filter/filter-selectors.js","Pages/ContactPage.jsx"],"sourcesContent":["const inititalState = {\n     name: '', number: ''\n}\n\nexport default inititalState;","import styled from 'styled-components';\n\nconst StyledBtn = styled.button`\n  border: ${({ type }) =>\n    type === 'submit' ? 'none' : '1px solid grey'};;\n  outline: none;\n  cursor: pointer;\n  background-color: ${({ type }) =>\n    type === 'submit' ? '#0000ff' : 'transparent'};\n  border-radius: 5px;\n  padding: 5px 10px;\n  max-width: 100px;\n  transition: background-color 0.25s cubic-bezier(.05,.97,1,.08), color 0.25s cubic-bezier(.05,.97,1,.08);\n\n  &:hover {\n    background-color:${({ type }) =>\n  type === 'submit' ? '#ff0000' : '#0000ff'};\n    color:#ffffff;\n  }\n`;\n\nexport default StyledBtn;\n","import styled from 'styled-components';\n\nconst StyledContactForm = styled.form`\n  display: flex;\n  flex-direction:column;\n  margin-left:10px;\n  margin-bottom: 30px;\n  margin-right: auto;\n  gap:10px;\n  padding-left:5px\n\n`;\nexport default StyledContactForm;\n","import styled from 'styled-components';\n\nconst StyledLabel = styled.label`\n  display: flex;\n  flex-direction: column;\n  gap: 5px;\n  max-width: 200px;\n`;\n\nexport default StyledLabel;\n","export const getAllContacts = store => store.contacts.items;\n\nexport const getFilteredContacts = ({ contacts, filter } ) => {\n    if (!filter) {\n      return contacts.items;\n    }\n    const normalizedFilter = filter.toLowerCase();\n    return contacts.items.filter(\n      ({ name, number }) =>\n        name.toLowerCase().includes(normalizedFilter) ||\n        number.includes(normalizedFilter)\n    );\n}\n\nexport const getIsLoading = state => state.contacts.isLoading;\n\nexport const getError = state => state.contacts.error;","import { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport inititalState from './initialState';\nimport StyledBtn from 'shared/components/Button/Button.styled';\nimport StyledContactForm from './ContactForm.styled';\nimport StyledLabel from './label.styled';\n\nimport { getIsLoading } from 'redux/contacts/contacts-selectors';\nimport { ColorRing } from 'react-loader-spinner';\n\nimport { useSelector } from 'react-redux';\n\nconst ContactForm = ({ onSubmit }) => {\n  const [state, setState] = useState({ ...inititalState });\n\n  const isLoading = useSelector(getIsLoading);\n\n  const handleChange = e => {\n    const { name, value } = e.currentTarget;\n    setState(prevState => {\n      return {\n        ...prevState,\n        [name]: value,\n      };\n    });\n  };\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    const result = onSubmit({ name, number });\n    if (result) {\n      setState({ ...inititalState });\n    }\n  };\n\n  const { name, number } = state;\n\n  return (\n    <StyledContactForm onSubmit={handleSubmit}>\n      <StyledLabel>\n        Name\n        <input\n          type=\"text\"\n          name=\"name\"\n          pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n          title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n          required\n          value={name}\n          onChange={handleChange}\n        />\n      </StyledLabel>\n      <StyledLabel>\n        Number\n        <input\n          type=\"tel\"\n          name=\"number\"\n          pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n          title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\n          required\n          value={number}\n          onChange={handleChange}\n        />\n      </StyledLabel>\n      <div\n        style={{\n          display: 'flex',\n          alignItems: 'center',\n          justifyContent: 'center',\n          maxHeight: 30,\n          maxWidth:100,\n        }}\n      >\n        {!isLoading && <StyledBtn type=\"submit\">Add contact</StyledBtn>}\n        {isLoading && (\n          <ColorRing\n            visible={true}\n            height=\"40\"\n            width=\"40\"\n            ariaLabel=\"blocks-loading\"\n            wrapperStyle={{}}\n            wrapperClass=\"blocks-wrapper\"\n            colors={['#e15b64', '#f47e60', '#f8b26a', '#abbd81', '#849b87']}\n          />\n        )}\n      </div>\n    </StyledContactForm>\n  );\n};\n\nexport default ContactForm;\n\nContactForm.propTypes = {\n  onSubmit: PropTypes.func.isRequired,\n};\n","import styled from 'styled-components';\nimport StyledLabel from 'modules/ContactForm/label.styled';\n\nconst StyledFilterLabel = styled(StyledLabel)`\n  margin-bottom: 20px;\n`;\n\nexport default StyledFilterLabel","import React from 'react';\nimport PropTypes from 'prop-types';\nimport StyledFilterLabel from './FilterLabel.styled';\n\nconst Filter = ({ value, onChange }) => (\n  <StyledFilterLabel>\n    Find contacts by name\n    <input type=\"text\" value={value} onChange={onChange} />\n  </StyledFilterLabel>\n);\n\nexport default Filter;\n\nFilter.propTypes = {\n  value: PropTypes.string.isRequired,\n  onChange:PropTypes.func.isRequired,\n}\n","import styled from 'styled-components';\n\nconst StyledContact = styled.li`\n  margin: 0;\n  padding: 5px 10px;\n  border-radius: 5px;\n  &:not(:last-child) {\n    margin-bottom: 10px;\n  }\n  display: flex;\n  justify-content: space-between;\n  gap: 20px;\n  align-items: center;\n  box-shadow: rgba(0, 0, 0, 0.24) 0px 3px 8px;\n`;\n\nexport default StyledContact;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { useDispatch } from 'react-redux';\nimport { useSelector } from 'react-redux';\nimport { deleteContact } from 'redux/contacts/operations';\nimport { getIsLoading } from 'redux/contacts/contacts-selectors';\nimport { Notify } from 'notiflix';\nimport StyledBtn from '../../shared/components/Button/Button.styled';\nimport StyledContact from './Contact.styled';\n\nimport { ColorRing } from 'react-loader-spinner';\n\nconst Contact = ({ name, number, id }) => {\n  const isLoading = useSelector(getIsLoading);\n  const dispatch = useDispatch();\n  const handleDelete = () => {\n    dispatch(deleteContact(id));\n    Notify.warning(\n      `${name} has been successfully deleted from your phone book!`\n    );\n  };\n  return (\n    <StyledContact>\n      <span>\n        {name}: {number}\n      </span>\n      {!isLoading && (\n        <StyledBtn type=\"button\" onClick={handleDelete}>\n          Delete\n        </StyledBtn>\n      )}\n      {isLoading && (\n        <ColorRing\n          visible={true}\n          height=\"40\"\n          width=\"40\"\n          ariaLabel=\"blocks-loading\"\n          wrapperStyle={{}}\n          wrapperClass=\"blocks-wrapper\"\n          colors={['#e15b64', '#f47e60', '#f8b26a', '#abbd81', '#849b87']}\n        />\n      )}\n    </StyledContact>\n  );\n};\n\nexport default Contact;\n\nContact.defaultProps = {\n  id: '01',\n};\n\nContact.propTypes = {\n  name: PropTypes.string,\n  number: PropTypes.string.isRequired,\n  id: PropTypes.string.isRequired,\n};\n","import styled from 'styled-components';\n\nconst ContactListStyled = styled.ul`\n  margin: 0;\n  padding: 0;\n  list-style: none;\n  max-width:400px;\n`;\n\nexport default ContactListStyled;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport Contact from '../Contact/Contact';\nimport ContactListStyled from './ContactList.styled';\n\nimport { getFilteredContacts } from 'redux/contacts/contacts-selectors';\n\nimport { useSelector } from 'react-redux';\n\nconst ContactList = () => {\n  const visibleContacts = useSelector(getFilteredContacts);\n  return (\n    <ContactListStyled>\n      {visibleContacts.map(({ id, name, number }) => {\n        return <Contact name={name} key={id} number={number} id={id} />;\n      })}\n    </ContactListStyled>\n  );\n};\n\nexport default ContactList;\n\nContactList.defaultProps = {\n  visibleContacts: [],\n};\n\nContactList.propTypes = {\n  visibleContacts: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.string.isRequired,\n      name: PropTypes.string.isRequired,\n      number: PropTypes.string.isRequired,\n    })\n  ),\n};\n","import styled from 'styled-components';\n\nconst StyledBookTitle = styled.h1`\n  margin-left: 15px;\n  font-size: 24px;\n  font-weight: 700;\n`;\n\nexport default StyledBookTitle;\n","import styled from 'styled-components';\n\nconst ContactTitle = styled.h2`\n  font-size: 24px;\n  font-weight: 700;\n`;\n\nexport default ContactTitle","import styled from 'styled-components';\n\nconst ContactContainer = styled.div`\n  margin-left: 15px;\n`;\n\nexport default ContactContainer;","export const getFilter = store => store.filter;","import { Notify } from 'notiflix';\nimport { useSelector } from 'react-redux';\nimport { useDispatch } from 'react-redux';\nimport { useEffect } from 'react';\n\nimport ContactForm from 'modules/ContactForm/ContactForm';\nimport Filter from 'modules/Filter/Filter';\nimport ContactList from 'modules/ContactList/ContactList';\nimport StyledBookTitle from 'modules/Contact/PhoneBookTitle.styled';\nimport ContactTitle from 'modules/Contact/ContactTitle.styled';\nimport ContactContainer from 'modules/Contact/СontactsContainer.styled';\n\nimport { addContact, fetchContacts } from 'redux/contacts/operations';\nimport { setFilter } from 'redux/filter/filter-slice';\nimport { getFilteredContacts } from 'redux/contacts/contacts-selectors';\nimport { getError } from 'redux/contacts/contacts-selectors';\nimport { getFilter } from 'redux/filter/filter-selectors';\n\nfunction ContactPage() {\n  const filteredContacts = useSelector(getFilteredContacts);\n  const filter = useSelector(getFilter);\n  const dispatch = useDispatch();\n\n  const isError = useSelector(getError);\n\n  useEffect(() => {\n    dispatch(fetchContacts());\n  }, [dispatch]);\n\n  const isNameExist = contName => {\n    const normalizedName = contName.toLowerCase();\n    const result = filteredContacts.find(({ name }) => {\n      return name.toLowerCase() === normalizedName;\n    });\n    return Boolean(result);\n  };\n\n  const handleAddContact = ({ name, number }) => {\n    if (isNameExist(name)) {\n      Notify.failure(`${name} has already added in contacts`);\n      return false;\n    } else {\n      Notify.success('Сontact has been added successfully');\n    }\n    const action = addContact({ name, number });\n    dispatch(action);\n    return true;\n  };\n\n  const changeFilter = e => {\n    dispatch(setFilter(e.currentTarget.value));\n  };\n\n  const isContact = Boolean(filteredContacts.length);\n\n  return (\n    <div style={{paddingTop:30, paddingBottom:30}}>\n      <StyledBookTitle>Phonebook</StyledBookTitle>\n      <ContactForm onSubmit={handleAddContact} />\n      {!isError && (\n        <ContactContainer>\n          <ContactTitle>Contacts</ContactTitle>\n          <Filter value={filter} onChange={changeFilter} />\n          {isContact && <ContactList />}\n          {!isContact && <p>No contact in phonebook</p>}\n        </ContactContainer>\n      )}\n      {isError && (\n        <p style={{ fontSize: 24, fontWeight: 800 }}>\n          Ops, Something goes wrong{' '}\n        </p>\n      )}\n    </div>\n  );\n}\n\nexport default ContactPage;\n"],"names":["name","number","styled","type","getFilteredContacts","contacts","filter","items","normalizedFilter","toLowerCase","includes","getIsLoading","state","isLoading","getError","error","onSubmit","useState","inititalState","setState","useSelector","handleChange","e","currentTarget","value","prevState","preventDefault","pattern","title","required","onChange","style","display","alignItems","justifyContent","maxHeight","maxWidth","visible","height","width","ariaLabel","wrapperStyle","wrapperClass","colors","StyledLabel","Contact","id","dispatch","useDispatch","onClick","deleteContact","Notify","defaultProps","ContactList","visibleContacts","map","getFilter","store","filteredContacts","isError","useEffect","fetchContacts","isContact","Boolean","length","paddingTop","paddingBottom","contName","normalizedName","result","find","isNameExist","action","addContact","setFilter","fontSize","fontWeight"],"sourceRoot":""}